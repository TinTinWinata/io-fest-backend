// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  email          String          @unique
  username       String          @unique
  name           String
  password       String
  isActive       Boolean         @default(false)
  profilePicture String?
  forums         Forum[]         @relation("postCreator")
  activationLink ActivationLink?
  refreshToken   String?

  @@map("users")
}

model ActivationLink {
  id             String   @id @default(uuid())
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId         String   @unique
  expirationDate DateTime @default(dbgenerated("NOW() + INTERVAL '2 HOUR'"))

  @@map("activation_links")
}

model Forum {
  id          String         @id @default(uuid())
  title       String
  description String
  creator     User           @relation("postCreator", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  comments    ForumComment[]
  seen        Int
  attachments Attachment[]

  @@map("forums")
}

model Attachment {
  attachedForum Forum          @relation(fields: [forumId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  forumId       String
  path          String
  type          AttachmentType

  @@id([forumId, path])
  @@map("attachments")
}

enum AttachmentType {
  Video @map("Video")
  Image @map("Image")

  @@map("attachment_types")
}

model ForumComment {
  id             String   @id @default(uuid())
  comment        String
  commentedForum Forum    @relation(fields: [ForumId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ForumId        String
  createdAt      DateTime @default(now())

  @@map("forum_comments")
}
